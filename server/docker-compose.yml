services:
  postgres:
    container_name: eventify-postgres
    image: postgres:15-alpine
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '4001:5432'
    labels:
      - traefik.enable=true
      - traefik.http.routers.eventify-postgres.entrypoints=websecure
      - traefik.http.routers.eventify-postgres.tls.certresolver=letsencrypt
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - common_network

  backend:
    container_name: eventify-backend
    image: kydanza/eventify-backend
    platform: linux/arm64/v8
    build:
      context: .
      dockerfile: Dockerfile
    # platform: linux/amd64
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '4000:4000'
    command: >
      sh -c "npm run build; npm run start:prod"
    networks:
      - common_network

volumes:
  postgres_data:

networks:
  common_network:
    external: true
